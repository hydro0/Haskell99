
==================== FINAL INTERFACE ====================
2017-12-24 17:22:38.270525 UTC

interface main@main:RPN 8002
  interface hash: bbe9ee0ca43c6a3b74241adcb905fc0f
  ABI hash: 361416fe8db3265c83fc70c491bf9b37
  export-list hash: ad75336e76ffeae2a17c8344dd586846
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: e8391dde344b558bbf052293f5ecc872
  sig of: Nothing
  used TH splices: False
  where
exports:
  RPN.solve
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
dc617ffce431dda940795fce4badf2e4
  $tc'Operation :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16434451698255010339##
                   1480077096095643002##
                   RPN.$trModule
                   RPN.$tc'Operation1) -}
d5616dbc58d12465fdb250dd556d93a4
  $tc'Operation1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Operation"#) -}
37cbb75a991986028aef9b243ab266d7
  $tc'Variable :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2200230725499336144##
                   6195930097082633211##
                   RPN.$trModule
                   RPN.$tc'Variable1) -}
dc4c1852d49d64d53a856d1f0e1606d5
  $tc'Variable1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Variable"#) -}
540cd25ab18fca3f5a3ef0ada2a2c77d
  $tcExpression :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16619222025163210890##
                   14290384828038085900##
                   RPN.$trModule
                   RPN.$tcExpression1) -}
44d455e4130459ba863bf13b66e19b64
  $tcExpression1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Expression"#) -}
e82d6414b4cefe266789d7c1843569be
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module RPN.$trModule2 RPN.$trModule1) -}
caf157173d5f10cd56aafc8f4d75eaf2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "RPN"#) -}
5811206eb2cfc14b464585c37772518b
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
567eb6c0ff7bf51743e7c52c5766e462
  data Expression
    = Variable GHC.Types.Char
    | Operation RPN.Operator RPN.Expression RPN.Expression
1a0ececa66d2228a797384717306b48b
  type Operator = GHC.Types.Char
c417fd86da83c7d8e79fc8d0f634d7a5
  evalExpression :: RPN.Expression -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
7a5ea57929abd3d197c96676dddfd3f5
  parseExpression :: GHC.Base.String -> RPN.Expression
  {- Arity: 1, Strictness: <S,U> -}
9aedd0974111d8132c650eefe4eca02e
  solve :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GHC.Base.String) ->
                 RPN.evalExpression (RPN.parseExpression x)) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

